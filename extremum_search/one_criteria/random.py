# Copyright 2022 Davydov Nikolay (NNDavydov)

import numpy as np

'''
Поиск экстремума функции методом случайного поиска

Включает:
 1) функция случайного поиска 
 2) функция количества точек для заданной вероятности
'''


def number_of_tests(p, q):
    '''
    функция, считающая количество испытаний N от вероятности P и q
    :param p: это вероятность того, что найденная точка минимума находится в интервале неопределенности
    :param q: это вероятность попадания в интервал неопределенности для отдельно взятой точки
    :return: необходимое число испытаний N
    '''
    return np.ceil(np.log(1 - p) / np.log(1 - q)).astype('int')


def random_search(function, a, b, p, q):
    '''
    функция случайного поиска минимума функции
    function на итервале [a,b] от вероятности p и q
    :param function: функция, минимум которой надо найти
    :param a: начало заданного интервала
    :param b: конец заданного интервала
    :param p: вероятность того, что найденная точка минимума находится в интервале неопределенности
    :param q: это вероятность попадания в интервал неопределенности для отдельно взятой точки
    :return: минимум функции f(x)
    '''
    n = number_of_tests(p, q)
    y_min = None
    x_min = None

    for k in range(0, n):
        x = np.random.uniform(a, b)
        if y_min is None or function(x) < y_min:
            y_min = function(x)
            x_min = x

    return x_min
